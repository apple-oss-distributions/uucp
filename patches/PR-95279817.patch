diff --git configure configure
index 4cced27..90fe11f 100755
--- configure
+++ configure
@@ -3026,6 +3026,7 @@ else
 #line 3027 "configure"
 #include "confdefs.h"
 
+#include <stdlib.h>
 int main() {
 extern void foo (); (void) exit (0);
 ; return 0; }
@@ -3154,6 +3155,7 @@ else
 #line 3155 "configure"
 #include "confdefs.h"
 
+#include <string.h>
 int main() {
  char *i; int j, k; memset(i, j, k); 
 ; return 0; }
@@ -3186,6 +3188,7 @@ else
 #line 3187 "configure"
 #include "confdefs.h"
 
+#include <string.h>
 int main() {
  char *i, *j; int k; memcmp(i, j, k); 
 ; return 0; }
@@ -3218,6 +3221,7 @@ else
 #line 3219 "configure"
 #include "confdefs.h"
 
+#include <string.h>
 int main() {
  char *i, *j; int k; memcpy(i, j, k); 
 ; return 0; }
@@ -3892,6 +3896,7 @@ else
 #line 3893 "configure"
 #include "confdefs.h"
 
+#include <stdlib.h>
 #include <sys/types.h>
 #include <sys/timeb.h>
 main ()
@@ -5426,7 +5431,10 @@ else
    i.e. the pid of the child, which means that wait was restarted
    after getting the signal.  */
 #include <sys/types.h>
+#include <sys/wait.h>
 #include <signal.h>
+#include <stdlib.h>
+#include <unistd.h>
 ucatch (isig) { }
 main () {
   int i = fork (), status;
diff --git configure.in configure.in
index 4087ec4..4475e08 100644
--- configure.in
+++ configure.in
@@ -278,7 +278,7 @@ fi
 dnl
 AC_MSG_CHECKING(for void)
 AC_CACHE_VAL(uucp_cv_c_void,
-[AC_TRY_COMPILE([], [extern void foo (); (void) exit (0);],
+[AC_TRY_COMPILE([#include <stdlib.h>], [extern void foo (); (void) exit (0);],
 uucp_cv_c_void=yes, uucp_cv_c_void=no)])
 AC_MSG_RESULT($uucp_cv_c_void)
 if test $uucp_cv_c_void = yes; then
@@ -318,7 +318,7 @@ dnl On some systems, memset, memcmp, and memcpy must be called with
 dnl the right number of arguments.
 AC_MSG_CHECKING(for memset)
 AC_CACHE_VAL(ac_cv_func_memset,
-[AC_TRY_LINK([], [ char *i; int j, k; memset(i, j, k); ],
+[AC_TRY_LINK([#include <string.h>], [ char *i; int j, k; memset(i, j, k); ],
 ac_cv_func_memset=yes, ac_cv_func_memset=no)])
 AC_MSG_RESULT($ac_cv_func_memset)
 if test $ac_cv_func_memset = yes; then
@@ -327,7 +327,7 @@ fi
 dnl
 AC_MSG_CHECKING(for memcmp)
 AC_CACHE_VAL(ac_cv_func_memcmp,
-[AC_TRY_LINK([], [ char *i, *j; int k; memcmp(i, j, k); ],
+[AC_TRY_LINK([#include <string.h>], [ char *i, *j; int k; memcmp(i, j, k); ],
 ac_cv_func_memcmp=yes, ac_cv_func_memcmp=no)])
 AC_MSG_RESULT($ac_cv_func_memcmp)
 if test $ac_cv_func_memcmp = yes; then
@@ -336,7 +336,7 @@ fi
 dnl
 AC_MSG_CHECKING(for memcpy)
 AC_CACHE_VAL(ac_cv_func_memcpy,
-[AC_TRY_LINK([], [ char *i, *j; int k; memcpy(i, j, k); ],
+[AC_TRY_LINK([#include <string.h>], [ char *i, *j; int k; memcpy(i, j, k); ],
 ac_cv_func_memcpy=yes, ac_cv_func_memcpy=no)])
 AC_MSG_RESULT($ac_cv_func_memcpy)
 if test $ac_cv_func_memcpy = yes; then
@@ -371,6 +371,7 @@ AC_CHECK_FUNC(ftime,
 [AC_MSG_CHECKING(that ftime works correctly)
 AC_CACHE_VAL(uucp_cv_sys_ftime_ok,
 [AC_TRY_RUN([
+#include <stdlib.h>
 #include <sys/types.h>
 #include <sys/timeb.h>
 main ()
